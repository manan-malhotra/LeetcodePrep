package Trees;
import java.util.*;
public class CTJ7906 {
	public static void main(String args[]){
		// Scanner sc = new Scanner(System.in);
		// int n = sc.nextInt();
		// int[] arr = new int[n];
		// for(int i=0;i<n;i++){
		// 	arr[i] = sc.nextInt();
		// }
        String[] a = "37 3 56 53 45 63 62 26 75 78 73 32 71 51 81 68 82 32 24 54 30 66 49 93 72 82 34 32 46 72 79 46 78 96 59 82 86 48 64 85 80 59 69 71 60 100 88 58 78 97 57 91 106 87 94 86 107 65 94 88 111 75 107 89 102 95 99 84 69 128 94 73 109 124 104 129 142 109 103 105 121 144 148 107 110 151 101 94".split(" ");
        // String[] a = "9 14 11 8 8 12 9 16 14 13 21 21 20 19 24 22 28 30 23 22 33 32 30 26 31 34 29 40 34 42 43 41 45 39 44 47 46 48 43 52 50 54 49 47 47 58 53 59 58 58 61 60 57 58 64 64 65 65 66 69 67 68 69 69 73 77 79 72 75 73 73 84 84 80 77 88 80 82 87 91 90 85 89 95 90 97 91 100 94 99 99 102 104 104 106 102 104 109 106 111 111 107 113 113 112 115 113 117 118 120 118 115 125 123 125 118 125 130 129 131 127 126 129 129 137 131 134 132 141 140 143 139 135 141 147 144 149 143 141 149 153 149 151 155 157 152 158 155 154 159 155 162 162 160 166 162 164 161 168 166 173 170 173 174 167 175 172 179 171 173 178 182 179 176 183 182 181 182 190 188 190 193 186 189 190 196 197 198 200 196 193 202 203 204 201 204 203 207 205 204 212 211 215 208 213 211 213 218 217 213 214 214 225 216 221 218 227 230 228 229 224 231 227 235 229 234 231 234 232 237 240 242 245 240 245 241 245 242 242 252 246 244 255 246 248 249 250 257 251 260 256 255 257 260 265 262 269 269 269 271 266 266 271 266 272 270 273 270 275 275 281 279 278 283 282 280 288 284 291 289 284 284 294 287 291 292 294 294 293 293 293 297 296 303 301 304 308 306 305 302 312 305 310 307 314 316 311 313 313 313 323 315 316 322 318 324 319 324 329 322 328 332 327 331 329 332 338 339 341 335 342 342 337 337 344 345 347 349 351 350 351 352 352 356 350 356 352 351 353 352 355 359 361 360 367 365 367 369 366 367 373 366 367 376 368 375 376 379 377 376 379 375 376 377 377 383 388 381 387 382 393 390 391 392 395 391 391 393".split(" ");
        // String[] a = "434 410 703 476 256 483 1037 792 974 543 291 281 388 303 257 1141 550 409 607 1049 785 1000 348 1018 767 393 331 1131 427 747 601 695 937 1136 1002 1023 463 883 711 278 320 772 382 476 896 460 506 279 686 875 1144 300 758 319 1076 350 521 284 303 754 782 654 1199 536 661 1070 427 868 819 880 942 934 514 1062 1147 1147 380 510 1213 799 1171 1210 828 726 325 753 855 571 760 880 1046 332 376 1086 639 753 995 781 458 595 495 1164 1238 718 1056 1215 693 1141 551 731 710 545 710 359 1022 785 808 640 1103 1260 1265 963 404 399 805 730 891 607 1248 1085 938 546 997 977 995 799 990 431 736 1214 888 1116 551 1266 1196 1240 785 737 612 620 782 607 1296 898 717 880 406 385 1141 1306 1122 798 625 890 491 1266 403 1180 410 835 1104 992 713 1293 964 615 1291 506 985 605 811 520 895 804 1046 1292 1310 1076 1300 1142 1127 1111 682 439 742 843 1320 759 705 465 1206 542 1066 596 566 759 870 530 869 581 790 1334 700 1337 805 465 1293 832 1189 1255 688 975 1078 958 1055 475 509 1082 872 851 1129 781 1026 896 1008 1222 1285 522 1326 849 674 809 821 996 783 1246 1027 763 710 847 648 958 504 1339 596 1115 1369 714 819 916 1116 621 1246 813 1119 924 650 1017 989 641 530 1257 989 889 859 1362 740 543 728 1036 921 960 593 1007 895 769 716 858 1006 1112 1349 765 1306 1183 1096 1010 691 1314 663 1246 535 703 1081 1032 1154 569 1023 1452 616 1253 1058 1091 781 1203 719 1173 1468 983 647 1089 655 555 1398 573 1279 1103 1122 577 969 1268 1304 984 573 986 616 1257 1085 1113 1251 1227 960 903 910 1210 642 1095 971 697 611 1080 1248 780 1148 1173 810 1007 800 1387 1037 1275 1229 915 777 1304 1402 893 1076 1000 1450 892 737 973 1234 1140 689 1313 739 1148 1443 782 782 1244 992 1359 967 1282 860 1245 1215 1373 1010 933 776 1259 778 718 637 1268 1131 622 694 1333 1004 1337 949 1154 1178 1092 774 1146 1330 957 859 843 836 1222 643 1144 930 1251 977 1384 1573 1196 1100 806 1299 1121 1511 935 1178 655 716 1560 1423 1095 1212 1044 684 1359 1561 1384 808 911 717 1010 1553 724 1517 968 1336 977 780 1391 1530 1236 1606 1252 833 1539 1539 1361 1597 726 1392 1489 1167 1017 945 1193 840 969 1039 986 1218 1092 1385 1228 1203 1303 1527 939 1610 1635 780 1589 1320 779 1234 1475 762 1216 1279 746 1259 1110 1550 863 1494 930 1367 1645 1209 837 1061 856 1234 820 1387 809 1478 1283 1101 1455 1338 1177 1409 1021 1249 1058 911 1302 1563 1532 1389 1231 996 1347 1378 841 1612 1148 888 1222 1263 1226 1353 894 1373 1135 1028 1190 810 1451 1036 1469 962 832 822 1528 1205 1047 1212 1149 905 980 1635 1209 1634 1388 1356 1566 909 1492 1104 1418 1086 825 1609 1701 1255 1001 1254 1304 1689 1580 1077 955 1645 1185 837 1149 1462 1277 1525 1647 1536 1507 1203 1462 1186 848 1316 1313 1611 1690 1069 981 1728 1013 1016 1263 1223 1532 897 1188 1386 1232 1400 1356 1618 1437 1758 1401 1034 1602 1367 887 1372 1762 1540 871 922 1167 1425 1719 1166 1732 1006 1145 995 1203 1641 1397 1035 1768 883 1596 1242 1455 1246 1154 1184 1242 1722 1438 1078 1376 1488 1666 1368 1312 1696 1448 1690 1400 1446 1079 1354 1604 1430 1554 1025 1342 1221 1261 1325 1248 1069 1763 967 1509 1125 1343 957 1107 1039 1170 1616 1713 1090 1238 1223 984 936 1109 1563 1506 1365 1109 1301 984 1782 1498 1444 1242 943 952 1603 1178 1826 1734 1797 1183 1253 983 1395 1450 1310 1236 1333 1501 1573 1709 1582 1606 1036 1308 1328 1493 1562 1773 1567 1555 1428 1166 951 1509 1255 1690 1823 1284 1572 1821 1544 1024 1879 1136 1547 1331 1444 1020 970 1208 1796 1672 1002 1896 1166 1393 1573 1789 1294 1267 1524 1832 1542 1530 1518 1903 1394 1460 1306 1084 1397 1019 1153 1389 1253 1797 1815 1791 1910 1823 1105 1811 1599 1142 1863 1852 1620 1535 1739 1065 1884 1412 1923 1519 1088 1532 1513 1503 1134 1891 1604 1601 1048 1825 1072 1313 1756 1898 1182 1743 1851 1348 1628 1578 1493 1616 1500 1182 1220 1360 1244 1169 1767 1284 1735 1848 1861 1361 1409 1106 1362 1122 1692 1395 1053 1747 1743 1790 1747 1958 1579 1643 1350 1305 1317 1869 1892 1787 1143 1203 1183 1407 1391 1915 1709 1158 1847 1599 1478 1283 1663 1797 1414 1432 1268 1419 1199 1084 1227 1948 1989 1753 1660 1406 2001 1919 1285 1956 1715 1420 1166 1888 1763 1491 1805 1473 1580 1651 1124 1110 1915 1767 1886 1322 1192 1199 1663 1365 1202 1862 1354 1177 1599 1928 1550 1635 1881 1800 1570 1627 1196 1696 1490 1917 1159 1266 1414 1694 1871 1437 1755 1805 1222 1604 2021 1360 1694 1697 1615 1784 1515 1909 1900 2053 1789 1402 1692 1673 2081 1263 1247 1276 1834 1611 2067 1920 1802 1420 1552 1664 1778 1242 1404 1919 1763 1410 1209 1440 1966 1736 2081 1460 1569 1959 1489 1333 1335 2032 1856 1387 1211 1949 1508 1944 1472 1540 1774 1237 1854 1233 1739 1537 1364 1977 1412 2013 1287 1452 1351 2135 2069 1327 1543 1532 1232 1855 1686 1387 1829 1483 1591 1910 1316 1968 1736 1654 1388 1389 1701 2050 1483 1369 1516 1705 2149 1730 1588 1359 2035 1737 1414 1970 1914 1805 1418 1938 1520 1894 2169 1260 1288 1669 1956 1388 1489 1543 1878 1712 1766 1480 1608 2025 1624 1898 1627 1614 1523 1985 1796 1395 1559 1976 2130 1360 1667 1433 2059 1948 2141 2109 2019 2185 1603 1798 1449 1898 2147 2077 1428 1730 1373 1837 1623 1741 1601 1992 2150 1864 1840 1753 1997 2189 1587 1984 1351 1987 2149 2194 1787 2087 2100 1655 2120 1550".split(" ");
        int[] arr = new int[a.length];
        int n = arr.length;
        for(int i=0;i<a.length;i++){
            arr[i] = Integer.parseInt(a[i]);
        }
		int ans = 0;
		for(int i=1;i<n;i++){
			int l = 0;
			int r = 0;
			for(int j=0;j<i;j++){
				double aj = (arr[i] - 5)/3.0;
				if(arr[j]<aj) l++;
			}
			for(int j=i+1;j<n;j++){
				double aj = (arr[i]-3)/5.0;
				if(arr[j]>aj) r++;
			}
			ans += (l*r);
		}
		System.out.println(ans);
	}
}
